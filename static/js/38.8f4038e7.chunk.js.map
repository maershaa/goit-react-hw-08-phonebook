{"version":3,"file":"static/js/38.8f4038e7.chunk.js","mappings":"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","sources":["pages/Login.jsx","redux/auth/auth.operation.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/auth.operation';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      email,\n      password,\n    };\n\n    dispatch(loginThunk(formData));\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <p>Email:</p>\n        <input\n          type=\"email\"\n          placeholder=\"hotmail@hotmail.com\"\n          required\n          name=\"userEmail\"\n        />\n      </label>\n      <label>\n        <p>Password:</p>\n        <input\n          type=\"password\"\n          placeholder=\"*******\"\n          required\n          name=\"userPassword\"\n          minLength={7}\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Sign In</button>\n    </form>\n  );\n};\n\nexport default Login;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// Создание экземпляра Axios с предустановленными параметрами\n// 'instance' представляет собой экземпляр Axios, который будет использоваться для всех запросов\n// Он создан с помощью axios.create() с определенными настройками, такими как baseURL\n// Данный экземпляр будет автоматически добавлять заголовок Authorization к каждому запросу\nexport const instance = axios.create({\n  baseURL: 'https://connections-api.herokuapp.com/',\n});\n\n// Функция setToken устанавливает заголовок Authorization для всех запросов Axios\n// Функция setToken позволяет установить токен авторизации, который будет использоваться в этом экземпляре Axios\nconst setToken = token => {\n  instance.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// !Создание санки для асинхронного входа пользователя\nexport const loginThunk = createAsyncThunk(\n  'auth/login',\n  async (formData, thunkApi) => {\n    try {\n      // Отправка POST-запроса на сервер для входа пользователя\n      const { data } = await instance.post('/users/login', formData);\n      // Установка токена авторизации в экземпляре Axios\n      setToken(data.token);\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\n// !Создание санки для регистрации нового пользователя\nexport const registerThunk = createAsyncThunk(\n  'auth/register',\n  async (formData, thunkApi) => {\n    try {\n      // Отправка POST-запроса на сервер для регистрации пользователя\n      const { data } = await instance.post('/users/signup', formData);\n      // Установка токена авторизации в экземпляре Axios\n      setToken(data.token);\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\n// !Создание санки для выхода пользователя\nexport const logOutThunk = createAsyncThunk(\n  'auth/logOut',\n  async (_, thunkApi) => {\n    try {\n      // Отправка POST-запроса на сервер для выхода пользователя\n      const { data } = await instance.post('/users/logout');\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  }\n);\n\n// !Создание санки для обновления данных пользователя\nexport const refreshThunk = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkApi) => {\n    try {\n      // Получение токена из хранилища Redux\n      const state = thunkApi.getState();\n      const token = state.auth.token;\n      // Установка токена авторизации в экземпляре Axios\n      setToken(token);\n      // Получение текущих данных пользователя с сервера\n      const { data } = await instance.get('/users/current');\n\n      return data;\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  },\n  {\n    // Условие выполнения санки: проверка на наличие токена в хранилище Redux\n    condition: (_, thunkApi) => {\n      const state = thunkApi.getState();\n      const token = state.auth.token;\n      if (!token) return false; // В случае отсутствия токена выполнение не произойдет\n      return true;\n    },\n  }\n);\n"],"names":["dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","formData","email","currentTarget","elements","userEmail","value","password","userPassword","loginThunk","children","_jsx","type","placeholder","required","name","minLength","instance","axios","baseURL","setToken","token","defaults","headers","common","Authorization","concat","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","thunkApi","_yield$instance$post","data","_context","prev","next","post","sent","abrupt","t0","rejectWithValue","message","stop","_x","_x2","apply","arguments","registerThunk","_ref2","_callee2","_yield$instance$post2","_context2","_x3","_x4","_ref3","_callee3","_","_yield$instance$post3","_context3","_x5","_x6","_ref4","_callee4","state","_yield$instance$get","_context4","getState","auth","get","_x7","_x8","condition"],"sourceRoot":""}