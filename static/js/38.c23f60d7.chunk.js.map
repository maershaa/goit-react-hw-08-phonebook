{"version":3,"file":"static/js/38.c23f60d7.chunk.js","mappings":"0OAkEA,UAxDc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAEpBC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWtB,OAVAN,EAAEO,iBAEIN,EAAQD,EAAEQ,cAAcC,SAASC,UAAUC,MAC3CT,EAAWF,EAAEQ,cAAcC,SAASG,aAAaD,MAEjDR,EAAW,CACfF,MAAAA,EACAC,SAAAA,GAGFE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQlB,GAASyB,EAAAA,EAAAA,IAAWV,IAAW,KAAD,EAAAC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAGpCW,QAAQtB,MAAM,gBAAeW,EAAAU,IAAO,yBAAAV,EAAAY,OAAA,GAAAjB,EAAA,kBAEvC,gBAlBakB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAoBd,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG7B,IAAS2B,EAAAA,EAAAA,MAAA,KAAGG,MAAO,CAAEC,MAAO,OAAQF,SAAA,CAAC,UAAQ7B,MAC9C2B,EAAAA,EAAAA,MAAA,QAAMzB,SAAUA,EAAS2B,SAAA,CACtBhC,IAAamC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACrBN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,YACHG,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLC,YAAY,sBACZC,UAAQ,EACRC,KAAK,kBAGTV,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,eACHG,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,YAAY,UACZC,UAAQ,EACRC,KAAK,eACLC,UAAW,QAGfN,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQL,SAAC,iBAI9B,C","sources":["pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/auth.operation';\nimport Loader from 'components/Loader/Loader';\n// import NotFound from 'pages/NotFound';\nimport {\n  selectAuthIsLoading,\n  selectAuthError,\n} from 'redux/auth/auth.selectors';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n  const error = useSelector(selectAuthError);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      email,\n      password,\n    };\n\n    // Dispatch the loginThunk and handle the error response\n    try {\n      await dispatch(loginThunk(formData));\n    } catch (err) {\n      // Handle the error here\n      console.error('Login failed:', err);\n    }\n  };\n\n  return (\n    <>\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      <form onSubmit={onSubmit}>\n        {isLoading && <Loader />} \n        <label>\n          <p>Email:</p>\n          <input\n            type=\"email\"\n            placeholder=\"hotmail@hotmail.com\"\n            required\n            name=\"userEmail\"\n          />\n        </label>\n        <label>\n          <p>Password:</p>\n          <input\n            type=\"password\"\n            placeholder=\"*******\"\n            required\n            name=\"userPassword\"\n            minLength={7}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Sign In</button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","error","selectAuthError","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","email","password","formData","_context","prev","next","preventDefault","currentTarget","elements","userEmail","value","userPassword","loginThunk","t0","console","stop","_x","apply","arguments","_jsxs","_Fragment","children","style","color","_jsx","Loader","type","placeholder","required","name","minLength"],"sourceRoot":""}