{"version":3,"file":"static/js/805.6d8649dc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","webpack://react-homework-template/./src/components/Contacts/Contact/Contact.module.css?6613","components/Contacts/Contact/Contact.jsx","components/Contacts/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputText\":\"Contacts_inputText__UpSMQ\",\"contactsList\":\"Contacts_contactsList__g3sDu\",\"errorBadge\":\"Contacts_errorBadge__rKbDw\"};","// extracted by mini-css-extract-plugin\nexport default {\"phoneName\":\"Contact_phoneName__CZ3GO\",\"phoneNumber\":\"Contact_phoneNumber__i2ddU\",\"item\":\"Contact_item__GfflJ\",\"iconsList\":\"Contact_iconsList__7aIxD\",\"favouriteIcon\":\"Contact_favouriteIcon__g5Gyt\",\"deleteIcon\":\"Contact_deleteIcon__wdS1L\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from 'components/Contacts/Contact/Contact.module.css';\nimport { deleteContact, toggleIsFavourite } from 'redux/operation';\nimport { selectContactsIsFavourite } from 'redux/selectors';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  // Используем хук useSelector из React-Redux для извлечения статуса \"избранности\" контакта\n  // из состояния Redux. Вызываем selectContactsIsFavourite, передавая ему текущее состояние (state)\n  // и идентификатор контакта (id). Полученное значение сохраняется в переменной isFavourite.\n  const isFavourite = useSelector(state =>\n    selectContactsIsFavourite(state, id)\n  );\n\n  // Состояние для установки стиля избранной кнопки\n  const [iconFill, setIconFill] = useState('none');\n\n  // Обработчик переключения статуса избранного контакта\n  const handleToggleFavourite = () => {\n    dispatch(toggleIsFavourite(id));\n    // !console.log('New isFavourite value:', isFavourite);\n  };\n  // Использование useEffect для изменения стиля кнопки в зависимости от значения isFavourite\n  useEffect(() => {\n    setIconFill(isFavourite ? 'white' : 'none');\n    console.log('setIconFill', isFavourite);\n  }, [isFavourite]);\n\n  // Обработчик удаления контакта\n  const handleDeleteContact = () => {\n    console.log('Deleting contact with ID:', id);\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li key={id} className={css.item}>\n      <div>\n        {/* Отображаем имя и номер контакта */}\n        <p className={css.phoneName}>{name}</p>\n        <p className={css.phoneNumber}> {number}</p>\n      </div>\n\n      <ul className={css.iconsList}>\n        <li>\n          <svg\n            onClick={handleToggleFavourite}\n            className={css.favouriteIcon}\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            aria-labelledby=\"favouriteIconTitle\"\n            stroke=\"#ffffff\"\n            strokeWidth=\"1\"\n            strokeLinecap=\"square\"\n            strokeLinejoin=\"miter\"\n            fill={iconFill}\n            color=\"#ffffff\"\n          >\n            <title id=\"favouriteIconTitle\">Favourite</title>\n            <path d=\"M12,21 L10.55,19.7051771 C5.4,15.1242507 2,12.1029973 2,8.39509537 C2,5.37384196 4.42,3 7.5,3 C9.24,3 10.91,3.79455041 12,5.05013624 C13.09,3.79455041 14.76,3 16.5,3 C19.58,3 22,5.37384196 22,8.39509537 C22,12.1029973 18.6,15.1242507 13.45,19.7149864 L12,21 Z\" />\n          </svg>\n        </li>\n        <li>\n          <svg\n            onClick={() => handleDeleteContact(id)}\n            className={css.deleteIcon}\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"-3 0 32 32\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <g id=\"icomoon-ignore\"></g>\n            <path\n              d=\"M18.723 21.788c-1.151-0.48-3.884-1.423-5.565-1.919-0.143-0.045-0.166-0.052-0.166-0.649 0-0.493 0.203-0.989 0.4-1.409 0.214-0.456 0.468-1.224 0.559-1.912 0.255-0.296 0.602-0.88 0.826-1.993 0.196-0.981 0.104-1.338-0.026-1.673-0.013-0.035-0.028-0.070-0.038-0.105-0.049-0.23 0.018-1.425 0.187-2.352 0.116-0.636-0.030-1.989-0.906-3.108-0.553-0.707-1.611-1.576-3.544-1.696l-1.060 0.001c-1.9 0.12-2.96 0.988-3.513 1.695-0.876 1.119-1.021 2.472-0.905 3.108 0.169 0.928 0.236 2.123 0.188 2.348-0.010 0.039-0.025 0.074-0.039 0.11-0.129 0.335-0.221 0.692-0.025 1.673 0.222 1.113 0.57 1.697 0.826 1.993 0.090 0.688 0.344 1.456 0.559 1.912 0.157 0.334 0.231 0.788 0.231 1.431 0 0.597-0.023 0.604-0.157 0.646-1.739 0.513-4.505 1.513-5.537 1.965-0.818 0.351-1.017 0.98-1.017 1.548s0 2.251 0 2.623c0 0.371 0.22 1.006 1.017 1.006 0.613 0 5.518 0 7.746 0 0.668 0 1.098 0 1.098 0h0.192c0 0 0.437 0 1.115 0 2.237 0 7.135 0 7.747 0 0.796 0 1.017-0.634 1.017-1.006s0-2.055 0-2.623-0.392-1.262-1.209-1.613zM18.876 25.98h-17.827v-2.579c0-0.318 0.093-0.46 0.389-0.587 0.993-0.435 3.741-1.426 5.433-1.926 0.889-0.282 0.889-1.070 0.889-1.646 0-0.801-0.104-1.397-0.331-1.878-0.172-0.366-0.392-1.022-0.468-1.601l-0.041-0.312-0.206-0.238c-0.113-0.13-0.395-0.538-0.59-1.513-0.153-0.759-0.085-0.935-0.031-1.076 0.031-0.076 0.059-0.152 0.081-0.237l0.006-0.022 0.004-0.022c0.106-0.495-0.037-1.962-0.181-2.755-0.067-0.365 0.017-1.401 0.701-2.273 0.417-0.534 1.228-1.19 2.721-1.293l0.992-0.001c1.219 0.083 2.145 0.518 2.753 1.294 0.682 0.872 0.765 1.909 0.699 2.275-0.148 0.814-0.287 2.257-0.179 2.758l0.008 0.039 0.011 0.038c0.015 0.054 0.035 0.108 0.055 0.161l0.010 0.026v0.002c0.059 0.153 0.127 0.326-0.025 1.087-0.196 0.974-0.479 1.384-0.592 1.515l-0.204 0.237-0.041 0.31c-0.077 0.578-0.297 1.237-0.469 1.603-0.247 0.525-0.5 1.157-0.5 1.856 0 0.577 0 1.367 0.918 1.655 1.641 0.485 4.345 1.416 5.448 1.877 0.418 0.179 0.574 0.493 0.574 0.649l-0.006 2.579z\"\n              fill=\"#ffffff\"\n            ></path>\n            <path\n              d=\"M23.296 14.965l2.742-2.742-0.743-0.742-2.741 2.742-2.742-2.742-0.742 0.742 2.742 2.742-2.742 2.742 0.742 0.742 2.742-2.742 2.742 2.742 0.742-0.742z\"\n              fill=\"#ffffff\"\n            ></path>\n          </svg>\n        </li>\n      </ul>\n    </li>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport css from 'components/Contacts/Contacts.module.css';\nimport Contact from 'components/Contacts/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n  selectContactsError,\n  selectFilteredContacts,\n} from 'redux/selectors';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactsList = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts); // Получение списка контактов из состояния Redux\n\n  // Сортировка отфильтрованных контактов по статусу избранного\n  const sortedContacts = [...filteredContacts].sort(\n    (a, b) => b.isFavourite - a.isFavourite\n  );\n  // console.log('sortedProducts', sortedContacts);\n\n  // Проверяем, что contacts является массивом и имеет длину больше нуля, чтобы убедиться, что в хранилище есть контакты\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <div className={css.contactsContainer}>\n      {error !== null && (\n        <p className=\"errorBadge\">\n          Oops, some error occurred... No contacts found. {error}\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n      <ul className={css.contactsList}>\n        {showContacts &&\n          sortedContacts.map(contact => (\n            <Contact\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.phone}\n            />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputText\":\"Filter_inputText__cZhKd\"};","import React from 'react';\nimport css from 'components/Filter/Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterWord } from 'redux/reducer';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  // Используем useSelector для получения текущего значения фильтра из состояния Redux\n  const filterWord = useSelector(selectFilter);\n  console.log('filterWord', filterWord);\n\n  // Обработчик изменения значения фильтра\n  const handleFilterChange = e => {\n    // Получаем новое значение фильтра из события изменения поля ввода\n    const newFilterValue = e.target.value;\n    console.log('newFilterValue', newFilterValue);\n\n    // Диспетчеризация экшена filterContact для обновления фильтра в состоянии Redux\n    dispatch(setFilterWord(newFilterValue));\n  };\n\n  // Возвращаем JSX элемент с полем ввода для фильтрации по имени контакта\n  return (\n    <input\n      type=\"text\"\n      name={filterWord}\n      // Паттерн для разрешенных символов в поле ввода\n      pattern={\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"}\n      // Обработчик изменения значения в поле ввода\n      onChange={handleFilterChange}\n      // Placeholder для поля ввода\n      placeholder=\"Search by name\"\n      // CSS класс для стилизации поля ввода\n      className={css.inputText}\n    />\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactList from 'components/Contacts/ContactsList';\nimport Filter from 'components/Filter/Filter';\nconst Contacts = () => {\n  return (\n    <div>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["_ref","id","name","number","dispatch","useDispatch","isFavourite","useSelector","state","selectContactsIsFavourite","_useState","useState","_useState2","_slicedToArray","iconFill","setIconFill","useEffect","console","log","_jsxs","className","css","children","_jsx","onClick","toggleIsFavourite","width","height","viewBox","role","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","color","d","deleteContact","version","xmlnsXlink","isLoading","selectContactsIsLoading","error","selectContactsError","filteredContacts","selectFilteredContacts","contacts","selectContacts","sortedContacts","_toConsumableArray","sort","a","b","showContacts","Array","isArray","length","Loader","map","contact","Contact","phone","filterWord","selectFilter","type","pattern","onChange","e","newFilterValue","target","value","setFilterWord","placeholder","Filter","ContactList"],"sourceRoot":""}