{"version":3,"file":"static/js/285.38f7cc2f.chunk.js","mappings":"2MAqEA,UA5DiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAyB1B,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAvBS,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cAAcC,SAASC,SAASC,MACzCC,EAAQP,EAAEG,cAAcC,SAASI,UAAUF,MAC3CG,EAAWT,EAAEG,cAAcC,SAASM,aAAaJ,MAEjDK,EAAW,CACfT,KAAsB,kBAATA,EAAoBA,EAAKU,OAASV,EAC/CK,MAAwB,kBAAVA,EAAqBA,EAAMK,OAASL,EAClDE,SAA8B,kBAAbA,EAAwBA,EAASG,OAASH,GAI3DA,EAASI,OAAS,EACpBC,MAAM,kOAINvB,GAASwB,EAAAA,EAAAA,IAAcJ,GACzB,EAG2BK,SAAA,CAChBpB,IAASE,EAAAA,EAAAA,MAAA,KAAGmB,MAAO,CAAEC,MAAO,OAAQF,SAAA,CAAC,UAAQpB,KAC7CH,IAAa0B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAC3BtB,EAAAA,EAAAA,MAAA,SAAAkB,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,WACHG,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOC,YAAY,YAAYC,UAAQ,EAACrB,KAAK,iBAE3DJ,EAAAA,EAAAA,MAAA,SAAAkB,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,YACHG,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLC,YAAY,eACZC,UAAQ,EACRrB,KAAK,kBAGTJ,EAAAA,EAAAA,MAAA,SAAAkB,SAAA,EACEG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,eACHG,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRrB,KAAK,qBAGTiB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQL,SAAC,cAG5B,C","sources":["pages/Register.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/auth/auth.operation';\nimport {\n  selectAuthIsLoading,\n  selectAuthError,\n} from 'redux/auth/auth.selectors';\nimport Loader from 'components/Loader/Loader';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n  const error = useSelector(selectAuthError);\n\n  // Функция обработки отправки формы регистрации\n  const onSubmit = e => {\n    e.preventDefault(); // Предотвращение стандартного поведения формы\n    // Получение значений полей формы\n    const name = e.currentTarget.elements.userName.value;\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      name: typeof name === 'string' ? name.trim() : name,\n      email: typeof email === 'string' ? email.trim() : email,\n      password: typeof password === 'string' ? password.trim() : password,\n    };\n\n      // Проверка длины пароля\n  if (password.length < 7) {\n    alert('Пароль должен содержать минимум 7 символов');\n    return;\n  }\n    // Отправка данных формы в хранилище для регистрации\n    dispatch(registerThunk(formData));\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n            {isLoading && <Loader />} \n      <label>\n        <p>Name:</p>\n        <input type=\"text\" placeholder=\"Full name\" required name=\"userName\" />\n      </label>\n      <label>\n        <p>Email:</p>\n        <input\n          type=\"email\"\n          placeholder=\"Email adress\"\n          required\n          name=\"userEmail\"\n        />\n      </label>\n      <label>\n        <p>Password:</p>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          name=\"userPassword\"\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","error","selectAuthError","_jsxs","onSubmit","e","preventDefault","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","formData","trim","length","alert","registerThunk","children","style","color","_jsx","Loader","type","placeholder","required"],"sourceRoot":""}